<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyj.p2p.base.mapper.RealAuthMapper" >
  <resultMap id="BaseResultMap" type="com.zyj.p2p.base.domain.RealAuth" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="bornDate" property="bornDate" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="image1" property="image1" jdbcType="VARCHAR" />
    <result column="image2" property="image2" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="realName" property="realName" jdbcType="LONGVARBINARY" />
    <result column="idNumber" property="idNumber" jdbcType="LONGVARBINARY" />
  </resultMap>

  <resultMap id="FullResultMap" type="RealAuth" extends="BaseResultMap">
    <association property="applier" javaType="Logininfo" columnPrefix="ap_">
      <id property="id" column="id"/>
      <result property="username" column="username"/>
    </association>

    <association property="auditor" javaType="Logininfo" columnPrefix="au_">
      <id property="id" column="id"/>
      <result property="username" column="username"/>
    </association>
  </resultMap>

  <insert id="insert" parameterType="com.zyj.p2p.base.domain.RealAuth" useGeneratedKeys="true" keyProperty="id" >
    insert into `realauth` (sex, bornDate, address, 
      state, image1, image2, 
      remark, auditTime, applyTime, 
      auditor_id, applier_id, realName,
      idNumber)
    values (#{sex,jdbcType=TINYINT}, #{bornDate,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{state,jdbcType=TINYINT}, #{image1,jdbcType=VARCHAR}, #{image2,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=TIMESTAMP},
      #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT}, #{realName,jdbcType=LONGVARBINARY},
      #{idNumber,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zyj.p2p.base.domain.RealAuth" >
    update `realauth`
    set sex = #{sex,jdbcType=TINYINT},
      bornDate = #{bornDate,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      image1 = #{image1,jdbcType=VARCHAR},
      image2 = #{image2,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT},
      realName = #{realName,jdbcType=LONGVARBINARY},
      idNumber = #{idNumber,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <sql id="full_column">
  	r.id, r.realName, r.sex, r.bornDate, r.idNumber, r.address, r.state, r.image1, r.image2, r.remark,
    r.auditTime, r.applyTime,ap.id as ap_id,ap.username as ap_username,au.id as au_id,au.username as au_username
  </sql>
  <select id="selectByPrimaryKey" resultMap="FullResultMap" parameterType="java.lang.Long" >
    select <include refid="full_column" />
    from `realauth` r JOIN logininfo ap ON r.applier_id=ap.id LEFT JOIN logininfo au ON r.auditor_id = au.id
    where r.id = #{id,jdbcType=BIGINT}
  </select>


  <select id="selectAll" resultMap="FullResultMap" >
    select <include refid="full_column"/>
    from `realauth` r join logininfo ap on r.applier_id = ap.id join logininfo au on r.auditor_id = au.id
  </select>


  <sql id="base_where">
    <where>
      <if test="qo.beginDate!=null">
        AND r.applyTime &gt;= #{qo.beginDate}
      </if>
      <if test="qo.endDate!=null">
        AND r.applyTime &lt;=#{qo.endDate}
      </if>
      <if test="qo.state>-1">
        AND r.state = #{qo.state}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="int">
    SELECT count(id) FROM realauth r
    <include refid="base_where" />
  </select>

  <select id="query" resultMap="FullResultMap">
    select <include refid="full_column" />
    from `realauth` r JOIN logininfo ap ON r.applier_id=ap.id LEFT JOIN logininfo au ON r.auditor_id = au.id
    <include refid="base_where" />
    LIMIT #{qo.start},#{qo.pageSize}
  </select>
</mapper>